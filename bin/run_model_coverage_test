#!/usr/bin/env python3
import argparse
from glob import glob
import os
import shutil
from subprocess import Popen, check_call, check_output
import apmapflow as apm


# setting up arg parser
desc = 'Runs a suite of integration and unit tests on the fortran code'
parser = argparse.ArgumentParser(description=desc)
parser.add_argument('-m', '--make-exec', default='make',
                    help='make executable to use (default: %(default)s)')

# getting args
args = parser.parse_args()


# get path to top of repository to serve as an anchor point
cmd = ['git', 'rev-parse', '--show-toplevel']
repo_top = check_output(cmd, universal_newlines=True).strip()

# create paths to model and test source code
model_src = os.path.join(repo_top, 'src', 'apmapflow', 'src')
test_src = os.path.join(repo_top, 'test', 'fortran', 'src')
test_fortran_dir = os.path.join(repo_top, 'test', 'fortran')

# move model source code into fortran test directory
for src_file in glob(os.path.join(model_src, '*.F')):
    shutil.copy(src_file, test_fortran_dir)

# copy over makefile
shutil.copyfile(os.path.join(model_src, 'makefile'),
                os.path.join(test_fortran_dir, 'model_makefile'))

# build test version of model and the unit test executables
os.chdir(test_fortran_dir)
check_call([args.make_exec, 'test', 'MODELNAME="apm-lcl-coverage-test.exe"'])

# run test suite located in bin directory
print('')
print('')
cmd = ['python', os.path.join('bin', 'test_model_code_coverage')]
proc = Popen(cmd, universal_newlines=True, cwd=os.curdir)
exit_code = proc.wait()
for test in glob('bin/*.exe'):
    print('')
    print('Running test file: ' + os.path.basename(test))
    proc = Popen([os.path.realpath(test)], universal_newlines=True, cwd=os.curdir)
    exit_code += proc.wait()

# building the coverage report
print('')
check_call([args.make_exec, 'coverage'])

# return with an exit code
print('')
if exit_code == 0:
    print('We have lift off!')
    exit(0)
else:
    print("Houston, we've had a problem here.")
    exit(1)
